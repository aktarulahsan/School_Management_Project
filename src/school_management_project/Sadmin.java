package school_management_project;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import com.sun.xml.internal.messaging.saaj.util.ByteOutputStream;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import school_management_project.DBConnection;

/**
 *
 * @author C3
 */
public class Sadmin extends javax.swing.JFrame {

    /**
     * Creates new form Sadmin
     */
    String cl, session, sname, stuid, gender, fname, mob, mail, address, pass;
    int srol;
    String pas;
    int x, y, xy;
    JFileChooser fc;
    String filename = null;
    byte[] person_image = null;
    int f = 0;
    DefaultTableModel model;

    public Sadmin(String name) {
        initComponents();
        this.person_image = null;
//        showdata();
        chooseclass();
        choosesession();
        //getseatlimit();

        model = new DefaultTableModel();
        stt.setModel(model);
        model.addColumn("stu_id");
        model.addColumn("class_name");
        model.addColumn("session_year");
        model.addColumn("roll_num");
        model.addColumn("s_name");

        showallstudents();
        //showallstudent();

    }

    public Sadmin() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gen = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        savedata = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mobi = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        pic = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        sn = new javax.swing.JTextField();
        fn = new javax.swing.JTextField();
        mo = new javax.swing.JTextField();
        em = new javax.swing.JTextField();
        ad = new javax.swing.JTextField();
        re = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sid = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        available = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        sess = new javax.swing.JComboBox<>();
        cla = new javax.swing.JComboBox<>();
        sgen = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        selectc = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        stt = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        sess1 = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        uname = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setText("S Name :");

        jLabel3.setText("Student ID  :");

        jLabel5.setText("Father Name : ");

        mobi.setText("Mobile no :");

        jLabel8.setText("Email  :");

        jLabel9.setText("Address :");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pic, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pic, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setText("Choose");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snActionPerformed(evt);
            }
        });

        fn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnActionPerformed(evt);
            }
        });

        mo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moActionPerformed(evt);
            }
        });

        em.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emActionPerformed(evt);
            }
        });

        ad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adActionPerformed(evt);
            }
        });

        re.setEditable(false);
        re.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reActionPerformed(evt);
            }
        });

        jLabel11.setText("Gender :");

        jLabel10.setText("Student ID  :");

        sid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sidActionPerformed(evt);
            }
        });

        jButton9.setText("View");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("View All  Student");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel13.setText("Class :");

        jLabel12.setText("Avalable site  : ");

        available.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableActionPerformed(evt);
            }
        });

        jLabel14.setText("Session  :");

        sess.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select sess --" }));
        sess.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sessItemStateChanged(evt);
            }
        });

        cla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select class --" }));
        cla.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                claItemStateChanged(evt);
            }
        });

        sgen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Gey" }));

        javax.swing.GroupLayout savedataLayout = new javax.swing.GroupLayout(savedata);
        savedata.setLayout(savedataLayout);
        savedataLayout.setHorizontalGroup(
            savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(savedataLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, savedataLayout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, savedataLayout.createSequentialGroup()
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(savedataLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(192, 192, 192))
                            .addGroup(savedataLayout.createSequentialGroup()
                                .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(savedataLayout.createSequentialGroup()
                                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(mobi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(savedataLayout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(savedataLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(mo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(savedataLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(ad, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(em, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(savedataLayout.createSequentialGroup()
                                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(27, 27, 27)
                                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(re)
                                            .addComponent(sn)
                                            .addComponent(available)
                                            .addComponent(sgen, 0, 147, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(savedataLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jButton1)
                                .addGap(109, 109, 109))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, savedataLayout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))))
                    .addGroup(savedataLayout.createSequentialGroup()
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sess, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cla, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        savedataLayout.setVerticalGroup(
            savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(savedataLayout.createSequentialGroup()
                .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(savedataLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(savedataLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, savedataLayout.createSequentialGroup()
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(available, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(re, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sgen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(em, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(savedataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(23, 23, 23))
        );

        jButton5.setText("Save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton11.setText("Clear");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton6.setText("Update");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255), 2, true), "View Student Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        jPanel2.setForeground(new java.awt.Color(102, 255, 102));

        jLabel4.setText("Class :");

        selectc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Class--" }));
        selectc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectcItemStateChanged(evt);
            }
        });

        stt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Reg Id", "Class", "session", "Roll", "Name"
            }
        ));
        jScrollPane1.setViewportView(stt);

        jLabel16.setText("Session  :");

        sess1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select sess --" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel16)
                        .addGap(46, 46, 46))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(395, 395, 395)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(selectc, 0, 145, Short.MAX_VALUE)
                    .addComponent(sess1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sess1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(savedata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(savedata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel7.setBackground(new java.awt.Color(45, 118, 232));

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/images/group_52px_1.png"))); // NOI18N
        jLabel15.setText(" Students");

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/images/slogo100-100.png"))); // NOI18N

        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("User ID");

        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel15))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 905, Short.MAX_VALUE)
                        .addComponent(jLabel39)))
                .addGap(18, 18, 18)
                .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel19))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addComponent(jLabel15))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });

        jMenu3.setText("home");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed

    private void snActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snActionPerformed

    private void fnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnActionPerformed

    private void moActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moActionPerformed

    private void emActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emActionPerformed

    private void adActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adActionPerformed

    private void reActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        getdata();
        if (sess.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Select Session");
            sess.requestFocus();
        } else {
            if (cla.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Select Class");
                cla.requestFocus();
            } else {
                if (sname.isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Enter Student name");
                    sn.requestFocus();
                } else {
                    int at, dot;
                    at = mail.indexOf("@");
                    dot = mail.lastIndexOf(".");
                    if (at < 2 || at + 2 >= dot || dot + 2 >= mail.length()) {
                        JOptionPane.showMessageDialog(rootPane, "Enter valid Mail id");
                        em.requestFocus();

                    } else {
                        if (mob.length() != 11) {
                            JOptionPane.showMessageDialog(rootPane, "enter  11 digits  mobile number ");

                        } else {

                            savedata();
                            cleardata();
                            showallstudent();
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        getimg();

    }//GEN-LAST:event_jButton1ActionPerformed

     public ArrayList<Getpicture> userList() {

        ArrayList<Getpicture> userList = new ArrayList<>();

        try {
            Connection con = DBConnection.getDBConnection();
            String query1 = "select pic from student_info ";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Getpicture user;
            while (rs.next()) {
                
  //int stu_id, String session_year, String class_name, String roll_num, String s_name, String user_id, String password, String s_gender, String father_name, 
//            String mother_name, String phone_no, String email_id, String rellgion, String address,byte[] pic, String s_group,String birth_date, String age
                  
//stu_id, session_year, class_name, roll_num, s_name, user_id, password, s_gender, father_name, mother_name, phone_no, email_id, rellgion, address, pic, s_group, birth_date, age   reg_date             
                user = new Getpicture(rs.getBytes("pic"));
               
                userList.add(user);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        return userList;
    }
    
    

    private void sidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sidActionPerformed

//    public ArrayList<User> userList() {
//
//        ArrayList<User> userList = new ArrayList<>();
//
//        try {
//            Connection con = DBConnection.getDBConnection();
//            String query1 = "SELECT * from student_info ";
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(query1);
//            User user;
//            while (rs.next()) {
//                
//  //int stu_id, String session_year, String class_name, String roll_num, String s_name, String user_id, String password, String s_gender, String father_name, 
////            String mother_name, String phone_no, String email_id, String rellgion, String address,byte[] pic, String s_group,String birth_date, String age
//                  
////stu_id, session_year, class_name, roll_num, s_name, user_id, password, s_gender, father_name, mother_name, phone_no, email_id, rellgion, address, pic, s_group, birth_date, age   reg_date             
//                user = new User(rs.getInt("stu_id"), rs.getString("session_year"), rs.getString("class_name"),
//                        rs.getString("roll_num"), rs.getString("s_name"), rs.getString("user_id"), 
//                        rs.getString("password"), rs.getString("s_gender"), rs.getString("father_name"),
//                        rs.getString("mother_name"),rs.getString("phone_no"),rs.getString("email_id"),
//                rs.getString("rellgion"), rs.getString("address"),rs.getBytes("pic"), rs.getDouble("s_group"), rs.getString("birth_date"), rs.getString("age"),rs.getDate("reg_date")
//                );
//                userList.add(user);
//
//            }
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e);
//        }
//
//        return userList;
//    }
//    
    
//    public void show_user() {
//        ArrayList<Getpicture> list = userList();
//        DefaultTableModel model = (DefaultTableModel) stt.getModel();
//        Object[] row = new Object[1];
//        for (int i = 0; i < list.size(); i++) {
//            Object object = row[i];
//            row[0] = list.get(i).getStu_id();
//            
//           
//            
//            model.addRow(row);
//        }
//
//    }

   
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String id = sid.getText();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please enter Student REGID");
            sid.requestFocus();
        } else {
            Connection con = null;
            Statement stmt = null;
            ResultSet rs = null;
            try {
                con = DBConnection.getDBConnection();
                //Create the Statement object
                stmt = con.createStatement();

                //Execute the query
                rs = stmt.executeQuery("select * from student_info where stu_id= '" + id + "' ");

                int count = 0;
                //name,roll,regid,class, gender, father, mother,phone,email, address, pic
                
                
                while (rs.next()) {
                    sn.setText(rs.getString("s_name"));
                    // r.setText(rs.getString("roll"));
                    re.setText(rs.getString("stu_id"));
                    //c.setSelectedItem(rs.getString("class"));
                    sgen.setSelectedItem(rs.getString("s_gender"));
                    fn.setText(rs.getString("father_name"));
                    //mn.setText(rs.getString("mother"));
                    mo.setText(rs.getString("phone_no"));
                    em.setText(rs.getString("address"));
                    ad.setText(rs.getString("email_id"));
                    //image = rs.getBytes("itemImage");
                    //pic.setIcon(rs.getByte("pic"));
//                     byte[] img = (userList().get().getPic());
//            ImageIcon imageIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_DEFAULT));
//            pic.setIcon(imageIcon);
//            person_image = img;;
byte[] img = (userList().get(1).getPic());
     ImageIcon imageIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_DEFAULT));
            pic.setIcon(imageIcon);
                    
                    count++;
                }
                if (count == 0) {
                    JOptionPane.showMessageDialog(rootPane, "There is no such record");
                }

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    //Close the connection and statement object
                    con.close();
                    stmt.close();
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
        showallstudents();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        cleardata();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
         //TODO add your handling code here:
        String n = uname.getText();
        Home stu = new Home();
        stu.admin.setText(n);
        stu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu3MouseClicked

    private void availableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availableActionPerformed

    private void claItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_claItemStateChanged
        // TODO add your handling code here:
        getdata();
        String a = sess.getSelectedItem().toString();
        String b= cla.getSelectedItem().toString();
        if (sess.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Select Session");
            
            
        } else {
            createroll();
            getseatlimit();
            xy = f;
            if (x == y) {
                jButton5.setVisible(false);
                JOptionPane.showConfirmDialog(rootPane, "student seat is full");
            }
            f = 0;
            y = 0;

        }

    }//GEN-LAST:event_claItemStateChanged

    
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        getdata();
        if (sess.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Select Session");
            sess.requestFocus();
        } else {
            if (cla.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Select Class");
                cla.requestFocus();
            } else {
                if (sname.isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Enter Student name");
                    sn.requestFocus();
                } else {
                    int at, dot;
                    at = mail.indexOf("@");
                    dot = mail.lastIndexOf(".");
                    if (at < 2 || at + 2 >= dot || dot + 2 >= mail.length()) {
                        JOptionPane.showMessageDialog(rootPane, "Enter valid Mail id");
                        em.requestFocus();

                    } else {
                        if (mob.length() != 11) {
                            JOptionPane.showMessageDialog(rootPane, "enter  11 digits  mobile number ");

                        } else {

                           updatedata();
                           showallstudent();
                           cleardata();
                            
                        }
                    }
                }
            }
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void selectcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectcItemStateChanged
        // TODO add your handling code here:
            String a = sess1.getSelectedItem().toString();
        if (sess1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Select Session");
            sess1.setSelectedIndex(0);
            selectc.setSelectedIndex(0);
        } else {
            showallstudent();
           

        }

        
    }//GEN-LAST:event_selectcItemStateChanged

    private void sessItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sessItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_sessItemStateChanged

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
         String n = uname.getText();
        Home stu = new Home();
        stu.admin.setText(n);
        stu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void savedata() {
        //String sname, roll, stuid, cl, gender, fname, mname, mob, mail, address;
        pas = "123";
        Connection con = null;
        PreparedStatement pst = null;

        Statement stmt = null;
        ResultSet rs = null;

        //ResultSet rsc=null;
        String regids;
        String ro, cls;
        String si=sid.getText();
        //String sc;
        try {

            con = DBConnection.getDBConnection();
            stmt = con.createStatement();
            regids = re.getText();
            rs=stmt.executeQuery("select * from student_info where session_year='"+session+"' and class_name='"+cl+"' and stu_id='"+si+"' ");
            if(rs.next()){
                JOptionPane.showMessageDialog(rootPane, "This student alrady Regestered in this Class");
            }else{
                            cls = cla.getSelectedItem().toString();
            session = sess.getSelectedItem().toString();

            pst = con.prepareStatement("insert into student_info(session_year, class_name, "
                    + "roll_num, s_name,s_gender, father_name,  phone_no, email_id, address, password, pic) values(?,?,?,?,?,?,?,?,?,?,?) ");
            pst.setString(1, session);
            pst.setString(2, cl);
            pst.setInt(3, srol);
            pst.setString(4, sname);
            pst.setString(5, gender);
            pst.setString(6, fname);
            pst.setString(7, mob);
            pst.setString(8, address);
            pst.setString(9, mail);
            pst.setString(10, pas);
            pst.setBytes(11, person_image);

            int s = pst.executeUpdate();

            if (s > 0) {
                JOptionPane.showMessageDialog(rootPane, "Registration Successful");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Registration faild", "working", JOptionPane.WARNING_MESSAGE);

            }

            }

//            
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                pst.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }

    }

    private void updatedata() {
        //String sname, roll, stuid, cl, gender, fname, mname, mob, mail, address;
        String id = sid.getText();
        Connection con = null;

        Statement stmt = null;
        ResultSet rsc = null;
        String sc = sid.getText();
        String stuid = re.getText();
        String sids=sid.getText();
            try {
//            Class.forName("com.mysql.jdbc.Driver");
                con = DBConnection.getDBConnection();
                stmt = con.createStatement();
                int count = 0;
                count = stmt.executeUpdate("update student_info set session_year='"+session+"',class_name='" + cl + "',  s_name='" + sname + "',s_gender='" + gender + "', father_name='" + fname + "',phone_no='" + mob + "',email_id='" + mail + "', address='" + address + "' , pic='" + person_image + "' where stu_id='" + sids + "' ");

                if (count > 0) {
                    JOptionPane.showMessageDialog(rootPane, "Update Successful");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Update faild", "working", JOptionPane.WARNING_MESSAGE);
                }

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    stmt.close();
                } catch (SQLException e) {
                    System.out.println(e);
                    System.out.println("not done ");
                }
            }
        
    }

    /**
     * @param args the command line arguments
     */
    private void getimg() {
        JFileChooser ch = new JFileChooser();
        int i = ch.showOpenDialog(this);
        if (i == JFileChooser.APPROVE_OPTION) {

            File f = ch.getSelectedFile();
            filename = f.getAbsolutePath();
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_DEFAULT));
            
//            byte[] img = (userList().get(i).getst_image());
//            ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_DEFAULT));
//            pic.setIcon(imageIcon);
//            person_image = filename;
//            
            
            pic.setIcon(imageIcon);
            try {
                File image = new File(filename);
                FileInputStream fis = new FileInputStream(image);
                ByteOutputStream bos = new ByteOutputStream();
                byte[] buf = new byte[1024];
                for (int readNum; (readNum = fis.read(buf)) != -1;) {
                    bos.write(buf, 0, readNum);
                }
                person_image = bos.toByteArray();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }

    private void getdata() {
        //String sname, roll,stuid, cl, fname,mname, mob,mail;

        sname = sn.getText();

        stuid = re.getText();
        cl = cla.getSelectedItem().toString();
        session = sess.getSelectedItem().toString();
        
        gender = sgen.getSelectedItem().toString();
        
        fname = fn.getText();

        mob = mo.getText();
        mail = em.getText();
        address = ad.getText();
        pass = "123";

    }

    public void cleardata() {
        sid.setText("");
        sn.setText("");
        available.setText("");
        re.setText("");
        cla.setSelectedIndex(0);
        sess.setSelectedIndex(0);
        gen.clearSelection();
        fn.setText("");
        pic.setIcon(null);
        mo.setText("");
        em.setText("");
        ad.setText("");

    }

    private void checkdata() {
        if (sname.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Enter Student name");
            sn.requestFocus();
        } else {
            if (cla.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Please select Student's Class");
                cla.requestFocus();
            } else {
                int at, dot;
                at = mail.indexOf("@");
                dot = mail.lastIndexOf(".");
                if (at < 2 || at + 2 >= dot || dot + 2 >= mail.length()) {
                    JOptionPane.showMessageDialog(rootPane, "Enter valid Mail id");
                    em.requestFocus();

                } else {

                    if (mob.length() != 11) {
                        JOptionPane.showMessageDialog(rootPane, "enter  11 digits  mobile number ");

                    }

                    //updatedata();
                }
            }
        }

    }

    public void chooseclass() {
        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;
        cla.setSelectedIndex(0);
        selectc.setSelectedIndex(0);
//        seclasslim.setSelectedIndex(0);
        try {
            con = DBConnection.getDBConnection();
            //Create the Statement object
            stmt = con.createStatement();

            //Execute the query
            rs = stmt.executeQuery("select c_name from s_classes  ");
            //rs = stmt.executeQuery("select Name,Wardno from patient " );
            int count = 0;
            while (rs.next()) {
                cla.addItem(rs.getString(1));
                selectc.addItem(rs.getString(1));
//                seclasslim.addItem(rs.getString(1));

                // rcmb.addItem(rs.getString(1));
                //pcmb.addItem(rs.getString(1));
                count++;
            }
            if (count == 0) {
                JOptionPane.showMessageDialog(rootPane, "There is no such record");
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                //Close the connection and statement object
                con.close();
                stmt.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }

    }

    public void choosesession() {
        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;
        sess.setSelectedIndex(0);
        sess1.setSelectedIndex(0);
//        seseslimit.setSelectedIndex(0);
        try {
            con = DBConnection.getDBConnection();
            //Create the Statement object
            stmt = con.createStatement();

            //Execute the query
            rs = stmt.executeQuery("select ses_year from session  ");
            //rs = stmt.executeQuery("select Name,Wardno from patient " );
            int count = 0;
            while (rs.next()) {
                sess.addItem(rs.getString(1));
                sess1.addItem(rs.getString(1));
//                seseslimit.addItem(rs.getString(1));
                // rcmb.addItem(rs.getString(1));
                //pcmb.addItem(rs.getString(1));

                count++;
            }
            if (count == 0) {
                JOptionPane.showMessageDialog(rootPane, "There is no such record");
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                //Close the connection and statement object
                con.close();
                stmt.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }

    }

    private void createroll() {
        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;
        String a, b, bc;
        a = sess.getSelectedItem().toString();
        b = cla.getSelectedItem().toString();
        int z = 0;
        try {
            con = DBConnection.getDBConnection();
            stmt = con.createStatement();
            rs = stmt.executeQuery("select * from student_info where session_year='" + a + "' and class_name='" + b + "' ");

            while (rs.next()) {
                //System.out.println(rs.getRow());
                ++z;
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                stmt.close();
                rs.close();
            } catch (Exception e) {
            }
        }
        f += z + 1;
        System.out.println(f);
        srol = f;

    }

    private void getseatlimit() {
        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;
        String a, b;
        jButton5.setVisible(true);
        a = sess.getSelectedItem().toString();
        b = cla.getSelectedItem().toString();
        try {
            con = DBConnection.getDBConnection();
            stmt = con.createStatement();
            rs = stmt.executeQuery("select * from student_seat_limit where class_name='" + b + "' and session_year='" + a + "'");
            System.out.println("done");

            while (rs.next()) {
                x = rs.getInt("s_limit");
                y = x - f;
                if (srol == x) {
                    jButton5.setVisible(false);
                    JOptionPane.showMessageDialog(rootPane, "Student limit is full ");

                } else {
                    System.out.println(y);
                    //System.out.println(f);
                    xy = y + 1;
                    available.setText(String.valueOf(xy));
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                stmt.close();
                rs.close();
            } catch (Exception e) {
            }
        }
    }

    private void showallstudent() {

        if (stt.getRowCount() > 0) {
            for (int i = stt.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;
        String a, b;
        a = sess1.getSelectedItem().toString();
        b = selectc.getSelectedItem().toString();
        try {
            con = DBConnection.getDBConnection();
            stmt = con.createStatement();
            rs = stmt.executeQuery("select * from student_info where session_year='" + a + "' and class_name='" + b + "' ");
           
                while(rs.next()){
                model.addRow(new Object[]{rs.getString("stu_id"), rs.getString("class_name"), rs.getString("session_year"), rs.getString("roll_num"), rs.getString("s_name")});
                }
                
           
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                stmt.close();
                con.close();
            } catch (Exception e) {
            }
        }

    }
    
    private void showallstudents() {

        if (stt.getRowCount() > 0) {
            for (int i = stt.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;
        String a, b;
        a = sess1.getSelectedItem().toString();
        b = selectc.getSelectedItem().toString();
        try {
            con = DBConnection.getDBConnection();
            stmt = con.createStatement();
            rs = stmt.executeQuery("select * from student_info order by stu_id ");
           
                while(rs.next()){
                model.addRow(new Object[]{rs.getString("stu_id"), rs.getString("class_name"), rs.getString("session_year"), rs.getString("roll_num"), rs.getString("s_name")});
                }
                
           
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                stmt.close();
                con.close();
            } catch (Exception e) {
            }
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sadmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sadmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ad;
    private javax.swing.JTextField available;
    private javax.swing.JComboBox<String> cla;
    private javax.swing.JTextField em;
    private javax.swing.JTextField fn;
    private javax.swing.ButtonGroup gen;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mo;
    private javax.swing.JLabel mobi;
    public javax.swing.JLabel pic;
    private javax.swing.JTextField re;
    private javax.swing.JPanel savedata;
    private javax.swing.JComboBox<String> selectc;
    private javax.swing.JComboBox<String> sess;
    private javax.swing.JComboBox<String> sess1;
    private javax.swing.JComboBox<String> sgen;
    private javax.swing.JTextField sid;
    private javax.swing.JTextField sn;
    private javax.swing.JTable stt;
    public javax.swing.JTextField uname;
    // End of variables declaration//GEN-END:variables



}
